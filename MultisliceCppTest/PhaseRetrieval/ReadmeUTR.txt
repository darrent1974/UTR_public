Brief description of the program "Unified Tomographic Reconstruction" (UTR), "UTR.exe"

The UTR.exe program performs 3D object reconstruction, using the UTR algorithm with input data (defocused images)
that have been collected in an experiment or generated by the MsctKirkland.exe program. 

This program has been written in C++ and can in principle be compiled under any OS supporting standard C++ compilers and execution environment. 
At present, the executable modules are available for 64-bit Windows (Windows 10 and 11) and Ubuntu Linux OSs. Any computer with one of these operating
systems can in principle be used for running this code, but multi-core CPU systems are recommended for faster execution. GPU computing
has not yet been implemented in this program, so the brand and performance characteristics of the GPU installed in a given computer are largely irrelevant.

Note also that UTR.exe requires considerable amount of RAM in order to run effectively. As a guide, the RAM should be able
to hold simultaneously 3 x 3D single-precision arrays (with 4 byte size elements), each of the size equal to the 3D volume that is being reconstructed.
For example, if the reconstructed 3D volume contains (1,024)^3 pixels, than each of the three arrays will occupy 4 GB and the required RAM size will be 12 GB. 
The number of input images does not affect this requirement.

The Euler angle convention in this program corresponds to that in Heymann et al, Journal of Structural Biology 151 (2005) 196–207.
They also correspond to the Euler angles in the "sister" forward-simulation MsctKirkland program (see ReadmeMsctKirkland for details).

Note that this program assumes the incident intensity to be uniform and equal to 1.0 at each pixel. In other words,
input images for this program should already be flat-field corrected. Note that flat-field correction affects the noise and 
the signal-to-noise ratio (SNR) in a predictable way. For example, if the "raw" projection (defocused) image contains N photons 
per pixel on average and the dominant noise is Poisson-distributed, then the standard deviation (std) of the noise in the "raw" input 
images is sqrt(N). The flat field correction in this case corresponds to division of every pixel intensity by N, with the
resultant noise in the flat-field corrected images having std dev equal to 1 / sqrt(N). Therefore, the SNR in the flat-field corrected
images is still sqrt(N), as in the raw images, while the mean pixel value in the flat-field corrected images is 1, as required.
The noise-to-signal (NSR) ratio here is equal to 1/sqrt(N), which should be taken into account for the input Parameter 18
which is used for internal noise filtering during the 3D reconstruction (see below). 

The control of execution of the UTR.exe program is managed via an editable text file UTR.txt which contains all modifiable
input parameters for UTR.exe. In order for the program to run, the input parameter file UTR.txt must be present in 
the same folder that UTR.exe is started from. Alternatively, the name of a suitable input parameter file can be presented as
the first command-line argument (following the UTR.exe name in the command line) when starting UTR.exe program. 
In the latter case, the parameter file can be given an arbitrary name and can be located in any place accessible by the running
instance of UTR.exe. The format of these input parameter files is fixed and must comply exactly with the structure described below.

The format of the UTR.txt file allows any number of "comment" lines to be present at the beginning and/or at the end of the file, each
such line starting with two forward slash symbols, "//". The comment lines are ignored by UTR.exe. Other (non-comment) lines must
all have the same structure and the fixed sequential order with respect to each other. Each non-comment line consists of:
(a) an arbitrary "expression" with no white spaces, which typically represents the name of a parameter. 
The contents of this "parameter name" expression are ignored by UTR.exe. An example of a parameter name shown below
is "10.Output_defocus_distances_min_and_max_in_UL:".
(b) one or more alphanumerical entries separated by a single white space from each other and from the parameter name, 
each such entry representing one parameter value, for example " -100.0 100.0", which corresponds to two parameter values equal to
-100.0 and 100.0. 
Note that the number of white spaces separating the parameters must be equal to one (exactly), otherwise a "zero" parameter may be
wrongly read in. There should be also no further white spaces after the last parameter in the line. Each line should be terminated
by the usual "end-of-line / new line / caret-return", etc., symbols, as common for a given OS. The number and 
types of parameters in each parameter line of the file UTR.txt is pre-determined and cannot be changed, only the values of these
parameters can be edited. The parameter names and comment lines are supposed to give explicit hints as to what type and how many 
parameters are expected in each line. 

Here is a typical example of a valid UTR.txt parameter file.

//*****Input parameter file for UHR.exe program*****
1.Verbose_output_during_execution_Yes(1)_or_No(0): 1
2.Input_file_with_rotation_angles_and_defocus_distances: DefocusRand360_1_D200.txt
3.Optional_file_with_indexes_and_weights_for_subseries_selection_or_NONE: NONE
4.Filename_base_of_flat_field_corrected_input_images_in_RAW,_TIFF_or_GRD_format: C:\Users\tgureyev\Downloads\Temp\nfept.grd
5.HeaderLength(bytes)_Endianness(0=little,1=big)_ElementLength(bytes)_(for_RAW_format): 0 0 4
6.Input_data_normalization_factors_f1_f2_(input->(input/f1)+f2): 1.0 0.0
7.Width_and_height_of_input_images_in_pixels_(images_from_files_can_be_trimmed_or_padded_with_1.0): 1024 1024
8.Modality_and_units_of_length_UL:_TEM_&_angstroms(0)_or_X-ray_CT_&_microns(1): 0
9.Pixel_size_in_UL: 0.1953125
10.Output_defocus_distances_min_and_max_in_UL: -100.0 100.0
11.Centre_of_rotation_x,_y_and_z_shifts_in_UL: 0 0 0 
12.Wavelength_in_UL: 0.02507934
13.Objective_aperture_(half_angle)_in_mrad: 40.0
14.Spherical_aberration_Cs3,_Cs5_in_mm: 0.0 0.0
15.Phase_retrieval_method:_none(0),_TIE-Hom-2D(1),_TIE-Hom-3D(2)_CTF-2D(3)_or_CTF-3D(4): 3
16.Apply_Ewald_sphere_curvature_correction:_No(0)_or_Yes(1): 1
17.Absorption_coefficient_beta/delta_(NOTE:_n=1+delta+i*beta): 0.0
18.Average_noise-to-signal_ratio(1/SNR)_in_input_images: 0.666667
19.Tikhonov_regularization_parameter: 0.1
20.Enforce_symmetry:_not_apply(0),_distribute_input_orientations(1),_post_apply(2): 0
21.Input_file_with_rotation_angles_enforcing_symmetry: Defocus8foldSymmetry.txt
22.Inverse_3D_Laplacian_filter:_not_apply(0)_or_apply(1): 0
23.Low-pass_filter_width_in_UL,_background_subtraction_value_and_lower_threshold_level: 0.0 0.0 -1.0e+8
24.Peak_localization_mode:_not_apply(0)_or_apply(1): 0
25.Transverse_and_longitudinal_side_lengths_for_peak_localization_in_UL: 1.0 1.0
26.File_name_base_for_reconstructed_3D_potential(TEM)_or_beta(X-ray_CT)_in_TIFF_or_GRD_format:  C:\Users\tgureyev\Downloads\Temp\put.grd
27.Save_3D_sampling_matrix_in_files_Yes(1)_or_No(0): 0
28.Import_and_reprocess_existing_3D_potential(TEM)_or_beta(X-ray_CT)_files:_No(0)_or_Yes(1): 0
29.Folder_name_for_auxiliary_files_output:  C:\Users\tgureyev\Downloads\Temp\000temp\
30.Number_of_parallel_threads: 20
//*****
//Electron wavelength in angstroms: E=200 keV <-> 0.02507934, E=300 keV <-> 0.01968749
//X-ray wavelength in microns = 0.001239841662513396 / E(keV) 
//*****!!!Don't forget to save this file after editing the parameters

Note that the "numbering" of parameters in the parameter names, such as "10" in 
"10.Output_defocus_distances_min_and_max_in_UL:" is inconsequential and is ignored by UTR.exe. On the other hand, the order
of the parameter lines in this file is critically important and must be the same as in the above example. In other words, 
UTR.exe interprets the input parameters according to the order of the non-comment lines in the parameter file, while ignoring
any numbering that may or may not appear in the parameter names.

Parameter 1 determines the amount of diagnostic information that UTR.exe 
outputs (prints out) during the execution. Setting this parameter to 1 increases the amount of information printed out during
the execution. In most instances, this parameter won't affect the speed of execution, but the user may still prefer 
to select "0" here in order to reduce the clutter on the screen during the program execution.

Parameter 2 contains the name of an input file with rotation angles and 
defocus distances, which can contain experimental data, or it can be the same file that was previously used by 
MsctKirkland.exe program to simulate a set of input defocused images. This file may have one
of two distinct formats which is determined by the file name extension. 
(a) If the file name extension is ".txt", the file may contain an arbitrary number of leading comment lines, each starting with
a pair of forward slashes "//". Non-comment lines all have the same structure as follows. Columns one, two and three always 
contain the rotation angles (in degrees) around the Z, Y' and Z" axes, respectively, where the Y' axis is the Y axis after the 
initial rotation of the 3D space around the Z axis and Z" corresponds to the optic axis, i.e. to the illumination direction Z axis
after the rotation around the first two angles (see the details about the Euler angle convention used here in Heymann et al, 
Journal of Structural Biology 151 (2005) 196–207). These three angles are followed by a defocus distance in the adopted 
"units of length" (later abbreviated to "UL") along the Z'' axis. It is advisable to use angstroms as UL in electron
microscopy applications and microns as UL in hard X-ray imaging applications.
An example of a valid "rotation angles and defocus distances" file is given below. 
In the case of conventional CT data, it is advisable to put the rotation angles in the second column (Y' angle),
with the first and the third column containing all zeros.
(b) If the file extension is ".relionnew", then this file contains an arbitrary number of lines,
each line containing exactly ten entries, separated by white spaces, with the following contents:
1st entry contains the sequential number of the line - this parameter is not used
2nd entry contains the name of the file where the data was sourced from - this parameter is not used
3rd entry is the image shift along x in Units of Length 
4th entry is the image shift along y in Units of Length 
5th entry is the defocus distance dx corresponding to the x coordinate
6th entry is the defocus distance dy corresponding to the y coordinate
7th entry contains the astigmatism angle (alpha) in degrees
8th entry is the rotation angle "rot" around the Z coordinate in degrees
9th entry is the rotation angle "tilt" around the Y' coordinate in degrees
10th entry is the rotation angle "psi" around the Z" coordinate in degrees
A suitable example of the file with 3D orientations and defocus distances is given below.
Note that the defocus distances given in this file are considered to be measured from 
the centre of the imaged object. Therefore, in order to reconstruct the 3D electrostatic potential inside
the imaged object of thickness D, the zmin and zmax values in Parameter 10 should normally be set to
-D/2 and D/2, respectively.
Note that in the case of .relionnew files, all numerical values, except the astigmatism angle (alpha)
are multiplied by (-1) inside the UTR.exe program, because this type of sign flipping has been found
consistent with the treatment of these parameters in RELION.
The text file given in Parameter 2 must be present in the same folder that UTR.exe is started from,
or, alternatively, the filename can include a fully specified pathname (OS specific). 

Parameter 3 contains the pathname of an optional file with indexes and weights for subseries selection or NONE,
if such file is not needed. The subseries selection file should be in a 2-column ASCII format, with the two entries 
in each line separated by a white space. The first column should contain the indexes of the frames to be selected 
(from the set defined by Parameter 2) for processing in this program. The second column should contain relative 
"weights" of these frames. In the UTR reconstruction, the contribution of each frame will be weighted according
to these weights, so the frames (defocused images) with high weights will have larger contribution 
and the frames with low weights will have smaller contribution to the reconstructed 3D potential. All indexes 
in the first column should be within the range for images defined in Parameter 2. An example of the subseries selection 
file is given at the end of this document.

Parameter 4 contains a fully specified pathname template for the input files containing either 
defocused images in GRD format, uncompressed 32-bit floating-point TIFF format or a
floating-point RAW file format with an optional header. Note that this template is used for generation of the eventual
input and output filenames which UTR.exe creates by inserting a single number that correspond to the index of 
a rotational orientation. As a result, when a filename template "ag.grd" is given in this parameter, the output filenames
may look like "ag00.grd, ag01.grd,..., ag35.grd" (36 files in total), if 36 different rotational positions and defocus distances 
are specified in the file whose name is given in Parameter 2. When a filename 
template "ag1.grd" is given in this parameter, the output filenames may look like "ag1.grd, ag2, ...,
ag108.grd" (108 x 1 = 108 files in total), if 108 different rotational positions, with 1 defocus distances
at each rotational position, are specified in the file whose name is given in Parameter 2. In particular,
in the first case the number of digits in each of the two indexes is always the same, which is 
achieved by padding with leading zeros as necessary, while in the second case the zero padding is
not used (as a consequence of the given file name template, and consequently the number of digits 
in the two indexes may vary depending on the magnitude of a particular index. If index padding was desired
in the second case, the file name template could be changed to "ag001.grd". The first version of the
template interpretation (with zero padding) is also used by default, e.g. when no digits are present 
in the template file name just before the file extension (as in ag.grd). 
See the description of GRD file format and an example DefocusRand36_NEW.txt file below. 

Parameter 5 contains the parameters required for correct interpretation of the data provided in RAW input
data files. These parameters include the length of the optional file header (in bytes), the endianness of
the file (0 = little endian, 1 = big endian) and the size of each data element, i.e. each pixel value (in bytes).
The last parameter can only be equal to the length of single-precision or double-precision floating-point numbers
on a given machine. The endianness of the data file must coincide with the endianness of the current computer / OS.
This will be checked, but no endianness conversion will be performed. The file header is read, but not used in this program.

Parameter 6 contains the input data normalization factors f1 and f2. The data read from the input data files
is rescaled according to: input -> (input / f1) + f2. For the input data to be not rescaled, the two numbers
specified in this parameter should be f1 = 1 and f2 = 0. Note that this software requires the incident intensity to be uniformly 1.0.
This normalization should take this requirement into account.

Parameter 7 contains the width(X) and the height(Y) of the image in pixels. If an input file contains an image with larger
dimensions, it will be truncated to the values given in this parameter. If an input file contains an image with smaller
dimensions than those given in this parameter, it will be padded with 1.0 to the dimensions given in this parameter. Note that
both the image width and the image height in the input files should be either smaller_or_equal or larger_or_equal to the
corresponding numbers given in Parameter 7. Truncating one dimension, while padding the other is currently not supported. 
If an input image is given in a RAW format, it will be interpreted according to the values given in this parameter when
reading the file, i.e. in the case of RAW input file format the truncation or padding won't be applied and, if the size
of an input RAW file is not equal to width * height specified in this parameter, an exeption will be thrown.

Parameter 8 determines the "modality of execution" of UTR.exe and "units of length, UL". When this parameter is equal to 0,
TEM imaging is assumed and the units of length are presumed to be angstroms. When this parameter is equal to 1,
hard X-ray imaging is assumed and the units of length are presumed to be microns. As long as the length units are kept
consistent in all input data, this switch makes limited difference to the outcome of the 3D reconstruction, except for the
normalization of the output result. When this parameter is equal to zero, the output data is normalized as the
electrostatic potential expressed in volts. When this parameter is equal to one, the output data is normalised as the 
imaginary part (beta) of the refractive index, which is dimensionless.

Parameter 9 contains the physical linear size (in Units of Length) of the (square) pixels of the images specified
in Parameter 4. When the input images are given in GRD format, which contain the physical dimensions of the images
internally, that internal information is ignored and replaced by the values obtained from Parameter 9 in combination with
the values in Parameter 7.

Parameter 10 contains the minimum and the maximum z coordinate in Units of Length for the output (xy) 
planes at which the 3D potential or beta is reconstructed. In order to reconstruct the 3D electrostatic potential or beta
inside an imaged object of thickness D, the zmin and zmax values should normally be set to -D/2 and D/2, respectively.
Note also that this program requires the x, y and z grid steps to be the same, and it will always use
the z grid step equal to the value given in Parameter 9. 

Parameter 11 contains user-definable x, y and z shifts of the centre of rotation (in Units of Length). The default
values of all zeros correspond to the centre of rotation located at the centre of the reconstruction volume.

Parameter 12 contains the wavelength of the illuminating wave in Units of Length. 

Parameter 13 contains the objective aperture in milliradians. Zero or negative value here is interpreted as an infinite aperture.

Parameter 14 contains the values of the spherical aberrations Cs3 and Cs5 (in millimetres) of 
the imaging system. Zero values correspond to the absence of aberrations.

Parameter 15 can be equal to 0, 1, 2, 3 or 4. It determines the 2D or 3D phase retrieval (CTF correction) method to be used as 
part of the UTR algorithm internally in the UTR.exe program. Methods 2 and 4 can be used only in the case when 
the defocus distance is the same at all orientations and there is no astigmatism, while methods 1 and 3 do not have these limitations.
"0" corresponds to no phase retrieval used, i.e. the reconstruction is performed directly from the input images without any
phase retrieval or CTF correction. This corresponds to conventional CT setup.
"1" corresponds to the 2D TIE-Hom phase retrieval method [Paganin D., Mayo S.C., Gureyev T.E., Miller P.R. and Wilkins S.W., 
Simultaneous phase and amplitude extraction from a single defocused image of a homogeneous object, J.Microscopy, 2002, vol.206,
Part 1, pp.33-40.] applied to each input image prior to CT reconstruction. 
"2" corresponds to 3D TIE-Hom phase retrieval method applied after the initial CT reconstruction [D. Thompson, Ya.I. Nesterets,
K. M. Pavlov and T.	Gureyev, Fast three-dimensional phase retrieval in propagation-based x-ray 	tomography, J.Synchrot.Radiat.,
vol. 26, pp. 1-14 (2019).].
"3" corresponds to the conventional 2D CTF applied to input images prior to CT reconstruction [see e.g. Cowley, J. M. (1995).
Diffraction Physics, 3rd Edition. Amsterdam, Netherlands: Elsevier].
"4" corresponds to the 3D CTF correction applied after the initial CT reconstruction [D. Thompson, Ya.I. Nesterets, K.M. Pavlov
and T.E. Gureyev, Three-dimensional contrast transfer functions in propagation-based tomography, eprint arXiv: 2206.02688
(https://arxiv.org/abs/2206.02688). Publication date: 23 May 2022.]

Parameter 16 is the switch for the Ewald sphere curvature correction. If this parameter is equal to 0, the Ewald sphere curvature
correction is not applied (flat Ewald sphere is effectively assumed as in conventional CT). If this parameter is equal to 1,
the Ewald sphere curvature correction is applied.

Parameter 17 contains the value of the absorption coefficient in the form of a fraction of the real increment of
the refractive index, i.e. when n = 1 + delta + i beta, then this coefficient is equal to beta / delta. The value must
be non-negative (with typical values between 0 and 0.1) in TEM imaging cases (i.e. when Parameter 8 is equal to 0) 
and must be negative (with typical values between (-0.1 and -0.0001) in hard X-ray imaging cases (i.e. when Parameter 8 is equal to 1).

Parameter 18 contains the average noise-to-signal ratio (1/SNR) in input images. The value of this parameter is used for
fine-tuning the noise filtering in the Fourier space. If this parameter is equal to 0, no noise filtering is applied.

Parameter 19 specifies the value of the Tikhonov regularization parameter which is used in the phase retrieval algorithms and
also in the inverse Laplace filtering, when Parameter 22 is set to 1.  

Parameter 20 can be equal to 0 (no symmetry enforcement will be applied), 1 (symmetry enforcement will be
applied during the reconstruction - see parameter 21 for details) or 2 (symmetry enforcement will be
applied after the 3D reconstruction or applied to a previously reconstructed 3D potential imported from
files, depending on the value of parameter 28).

Parameter 21 contains a name of an input file (in the same format as a .txt format in parameter 2 above),
with Euler rotation angles (in degrees) corresponding to 3D rotations enforcing a known symmetry of the 3D potential.
If parameter 21 is equal to 1, all input illumination angles from the file given in parameter 2
will be split into subsets assigned to each of the symmetry orientations from the file given in parameter 22,
and the reconstructed object will be rotated to the corresponding orientation for each of these subsets during
the reconstruction. If parameter 21 is equal to 2, the reconstructed or imported potential will be rotated to each one
of these angles and averaged over all such rotations. The first entry in this input symmetry file
is always expected to contain all zero angles, corresponding to the "initial" rotational position 
of the reconstructed 3D potential. Defocus distances present in the input file will be ignored.

Parameter 22 can be equal to 0 or 1. It determines if and how the inverse 3D Laplacian 
filter is applied to the 3D potential. "0" corresponds to not applying the inverse 3D Laplacian. 
"1" corresponds to applying it. The regularization parameter for the inverse 3D Laplacian filter is determined by
Parameter 19. Relatively large values of this parameter (1 or larger) correspond to a "weak" effect of the inverse Laplacian filter
which is not strongly affecting higher frequencies. Relatively small values of this parameter (say, 0.01 or smaller) 
usually result in a "full-strength" application of the inverse Laplacian, with a strong low-pass filtering effect.

Parameter 23 contains the low-pass filter width in Units of Length, the background subtraction value in volts (in 
the case of TEM imaging) or dimensionless (in the case of beta reconstruction in X-ray imaging) and 
the lower threshold value (in the same units as the background subtraction value) to be applied to the reconstructed
3D potential or beta. The low-pass filter width corresponds to the width of a 3D Gaussian with which the reconstructed
3D potential distribution or beta are convolved, followed by the subtraction of this low-pass filtered version of the
potential or beta from the original distribution of the potential or beta. As a result, a high-pass filtering of the
original 3D distribution is achieved, which allows one to effectively subtract away any 
slowly-varying background which may typically be present due to multiple scattering or due to the insufficient
number of different orientations in the input set of defocused images, etc. Note that the zero(0) value of
the low-pass filtering width is interpreted as "no filtering", and in this case the high-pass filtering
is not performed. A similar effect can be achieved by setting the low-pass filter width to a value that is
larger than the width of the reconstructed volume. Following the low-pass filtering,
the background subtraction value is subtracted from the 3D potential or beta, and any values that become lower
than the specified lower threshold value after this are replaced by this lower threshold value. 
The optimal values of the low-pass filter width, the background subtraction value and the 
lower threshold value can be determined by the user e.g. on the basis of comparison of the output 
3D potential or beta with a priori known realistic physical values for the atomic potentials or X-ray absorption.

Parameter 24 can be equal to 0 or 1. When this parameter is set to 0, the peak localization in
the reconstructed 3D potential or beta is not performed. When this parameter is set to 1, 
the peak localization in the reconstructed 3D potential is performed. This peak localization is typically
used in the case of TEM imaging of molecules or nanoparticles, where the peaks are supposed to correspond to
positions of the individual atoms. When this parameter is set to 1 and Parameter 28 is set to 1, the initial
reconstruction of the 3D potential is skipped, the distribution of the potential is read from the files defined
by Parameter 26 and the peak localization is performed in the imported 3D potential. This is preceded by the
filtering and thresholding of the imported potential according to Parameter 23, with the renormalized potential
saved in the GRD or TIFF files in the folder specified by Parameter 29 and with the names that are obtained from
the names defined by Parameter 26, but with inserted letter "R" at the end of the filename, 
immediately preceding the file extension. The "peak-localized" 3D potential is also saved in the
GRD or TIFF files in the folder specified by Parameter 29, and with the names that are obtained from 
the names defined by Parameter 26, but with inserted letter "A" at the end of the filename, 
immediately preceding the file extension. The positions of the located peaks, as well as their intensities,
will be also saved in a Kirkland-format XYZ molecular file, provided that the number of peaks is less
than a pre-defined maximum (currently this is set to 500,000; this is done in order to avoid extremely
large XYZ files to be saved on a hard disk, which may take a very long time and occupy a lot of disk space).
The name of this XYZ file is created from the name template defined by Parameter 26, but with the letter "A" inserted
at the end of the filename, immediately preceding the file extension, which in turn is changed
to ".xyz" here. This file is also saved in the folder specified in Parameter 29. A typical usage cycle of 
UTR.exe in the case of TEM imaging with atom localization may consist of an initial reconstruction of the 3D potential
from defocused images and saving them into files in the first run of UTR.exe, with Parameter 28 set to 0 and 
Parameter 23 set to "0 0 -1.e+8". This may be followed by a second run (restart) of UTR.exe program, with a
suitably modified parameter file, where Parameter 28 is set to 1, and Parameter 25 are set to some suitable values
for background removal.

Parameter 25 defines the transverse (x and y) and longitudinal (z) side lengths of a moving parallelepiped
area ("box") that is used for peak localization in the reconstructed or imported 3D potential. 
Note that we exclude the "atom_size"-wide vicinity of the outer boundary from this search, as we expect that
this vicinity may often contain artefacts. If the peak localization is not performed, this parameter is ignored. 

Parameter 26 contains a fully specified pathname for the output or input files (in GRD format or uncompressed
32-bit floating-point TIFF format) containing 2D sections of the 3D electrostatic potential or beta. Note that 
here the pathname contains a "template" for the eventual output filenames which UTR.exe creates by 
inserting numbers that correspond to the z-index of an (xy) plane with a 2D section of the 3D 
potential. As a result, when a filename template "out.grd" is given in this parameter, the 
actual filenames with the 3D potential may look like "out000.grd, out001.grd,..., out255.grd", 
if 256 (xy) planes are specified as a consequence of the values in Parameters 9 and 10.

Parameter 27 specifies if the 3D sampling matrix is to be saved in a series of GRD files. The names of these files
are created by modifying the output filenames specified in Parameter 29 below, by changing the file extensions to ".grd"
and adding the capital letters "FM" before that file extension.

Parameter 28 can be equal to 0 or 1. When this parameter is set to 0, the UTR reconstruction
of the 3D potential or beta from defocused images is performed. When this parameter is set to 1, 
the previously calculated 3D potential is imported from files specified in Parameter 26.

Parameter 29 contains a fully specified pathname for the output of various auxiliary files. 
The specified folder must already exist in an accessible location.

Parameter 30 contains the desired number of worker threads to launch during the execution of 
UTR.exe. The recommend number is equal to the hyper-threading capacity of one's 
computer (often, this number is equal to the number of available CPU cores times 2), minus 1 
(one thread may be reserved for the "main user thread" that leaves the computer responsive to 
user interactions during prolonged calculations). For example, if you run UTR.exe 
on a PC with an Intel Core i5 CPU with 6 cores, the recommended value of this parameter is 11.
 
============================================================================================
** Example of a text file with ".txt" extension whose name may appear in Parameter 2. 
All values are given either in degrees (for the first three entries in each line, which correspond to the three
Euler angles: Z, Y' and Z") or Units of Length (for the fourth entry in each line, which corresponds
to the defocus distance). 
During simulation studies, this can be the same file as used in MsctKirkland.exe for the generation of the defocused
images which are then used as the input dataset for UTR.exe. 

//Z_rotation Y'_rotation Z''_rotation1 Defocus
//psi=360.0*rand() theta=180/PI()*ACOS(2*RAND()-1) phi=360*rand()	
268.9684152	66.20358211	100.4169736	210.1454142
146.7471479	70.46431359	34.34374218	231.2791404
274.7238146	80.37923699	344.0494314	210.0714735
165.3944148	89.60971364	179.7037673	249.4950289
349.4888826	88.33840406	49.25421957	228.667701
61.85876917	86.77938274	101.8111348	206.8685751
117.2002194	65.16493835	121.3931174	234.8572671
155.4949867	95.15004812	99.24336333	206.6564807
138.5146237	148.8735577	327.1313971	200.2277775
112.9423517	99.83640419	283.8678981	222.4506311
335.2617118	143.9517163	208.370657	242.5309917
230.3333445	56.06021569	7.857715876	247.124579
275.2181793	62.40848443	136.9543137	210.6128061
132.7053333	87.30821795	50.59598312	233.8582484
41.13964133	135.3810752	50.00391004	204.643126
232.3309275	41.52208039	122.6825908	249.3695538
16.47618617	129.4430355	54.81158438	227.8116918
189.2987502	87.59006114	226.3680971	217.9579023
327.0967099	8.01195461	43.82853034	225.388661
80.5854237	119.3418314	193.4491952	209.2822056
57.01989282	95.96744199	191.030079	227.467602
174.16981	131.2089063	55.37898987	229.6931076
171.5043437	121.9167595	128.0471205	236.8846099
284.1361634	63.31027125	341.1026623	239.270861
67.58044425	106.6672645	337.1440757	247.1614924
101.1963348	73.83555384	277.4511132	233.367356
197.2744483	115.8978192	202.3832316	241.4261796

======================================================================================= 
** Example of a text file with ".relionnew" extension whose name may appear in Parameter 2. All numeric parameter values are given either in Units of Length or degrees.
The entries in each line are as following: 'index','rlnImageName','rlnOriginXAngst','rlnOriginYAngst','rlnDefocusU','rlnDefocusV','rlnDefocusAngle','rlnAngleRot','rlnAngleTilt','rlnAnglePsi'

0 000027@Extract/job028/raw_data/FoilHole_24015511_Data_24016401_24016403_20200225_0229_Fractions.mrcs 6.0747860000000005 5.763797 -4733.33691 -4973.70459 -1.0750600000000001 56.901502 49.038866 -48.524609999999996
1 000084@Extract/job028/raw_data/FoilHole_24979112_Data_24016511_24016513_20200225_0900_Fractions.mrcs 3.954763 -1.84023 10492.974609 10432.435547 -75.39655 131.376496 40.427904999999996 -89.30115
2 000097@Extract/job028/raw_data/FoilHole_24015641_Data_24016401_24016403_20200225_0336_Fractions.mrcs 0.27979699999999996 -3.8142400000000003 7113.157227 6892.040039 -83.40009 108.881904 24.085185 -110.51613
3 000006@Extract/job028/raw_data/FoilHole_24978107_Data_24016511_24016513_20200225_0556_Fractions.mrcs 1.8157740000000002 3.186774 5342.791015999999 5342.791015999999 46.90181 47.026806 6.831614999999999 125.40969399999999
4 000114@Extract/job028/raw_data/FoilHole_25057719_Data_24016511_24016513_20200226_1052_Fractions.mrcs -1.0722399999999999 -0.61524 9617.179688 9452.393555 -69.36966 93.474083 36.806884000000004 7.076600999999999
5 000089@Extract/job028/raw_data/FoilHole_25056872_Data_24016511_24016513_20200226_0928_Fractions.mrcs -1.6942099999999998 0.5907859999999999 4516.510742 4149.159668 -87.56658 48.633057 27.932356 -33.94515
6 000047@Extract/job028/raw_data/FoilHole_24979126_Data_24016401_24016403_20200225_0918_Fractions.mrcs -3.8332 1.047786 1699.285645 1511.013916 -3.4231199999999995 123.60555 47.735718 82.492642
7 000003@Extract/job028/raw_data/FoilHole_25040917_Data_24016401_24016403_20200225_2010_Fractions.mrcs 0.444774 7.445786 1898.1109620000002 1568.910889 -89.99998000000001 64.82292 32.071253000000006 -51.04459
8 000090@Extract/job028/raw_data/FoilHole_25057807_Data_24016511_24016513_20200226_1229_Fractions.mrcs 0.5907859999999999 3.186774 3255.9536129999997 2939.893311 89.999992 118.02816399999999 26.318164000000003 -126.2512
9 000036@Extract/job028/raw_data/FoilHole_25040886_Data_24016401_24016403_20200225_1941_Fractions.mrcs -5.496230000000001 6.988786 3605.345703 3256.579346 -86.0445 95.15947299999999 20.568626000000002 57.112438
10 000068@Extract/job028/raw_data/FoilHole_24015642_Data_24016511_24016513_20200225_0337_Fractions.mrcs -9.7742 0.298763 8800.291992 8632.805664 -80.19451 80.50514799999999 43.051194 -156.06998000000002

======================================================================================= 
** Example of a text file with ".relionnew" extension whose name may appear in Parameter 3.
6604	2.90E-02
2962	2.86E-02
9268	2.74E-02
9337	2.73E-02
9864	2.68E-02
9421	2.36E-02
2657	2.33E-02
2187	2.24E-02

=============================================================================== 
Specifications of the GRD file format:

GRD files contain:
(1) string "DSAA" or "DSBB" (in ASC and BIN GRD files, respectively)
(2) nx ny - array dimensions as "short"s (in ASC format, separated by a white space)
(3) xlo xhi - lower and higher X boundaries as "double"s (in ASC format, separated by a 
white space)
(4) ylo yhi - lower and higher Y boundaries as "double"s (in ASC format, separated by a 
white space)
(5) zlo zhi - minimum and maximum array value as "double"s (in ASC format, separated by a 
white space)
(6) u[i][j] - array values as "float"s (in ASC format, separated by a white space), j index 
changes most rapidly
 
 Note that, as a consequence of the above GRD format file specification, a binary GRD file can be treated as a RAW file
 with a 56-byte size header followed by (ny * nx) 4-byte numbers. Big endian or little endian encoding
 may be used in different OSs, but the universal compatibility in this respect is not guaranteed by UHR.exe 
 program. If the endianness issue causes troubles, it is advisable to specify RAW file format for input files,
 as in the latter case the endianness of the input data can be explicitly specified in Parameter 5.
